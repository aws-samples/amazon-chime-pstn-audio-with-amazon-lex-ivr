// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "DistributionUrl": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Fn::GetAtt": Array [
                "DistributionResourcesDistribution80C53434",
                "DomainName",
              ],
            },
            "/",
          ],
        ],
      },
    },
    "pstnPhoneNumber": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "PSTNAudiopstnPhoneNumberChimePhoneNumberpstnCustomResource40D6B3FE",
          "phoneNumber",
        ],
      },
    },
    "sshCommand": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "ssh ubuntu@",
            Object {
              "Ref": "VPCResourcesasteriskEipC341F971",
            },
          ],
        ],
      },
    },
    "ssmCommand": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws ssm start-session --target ",
            Object {
              "Ref": "ServerInstanceE518391B1677bfd2f1972570",
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsservicecanonicalubuntuserverjammystablecurrentarm64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/canonical/ubuntu/server/jammy/stable/current/arm64/hvm/ebs-gp2/ami-id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "97f30e67419a1676a2215492723e5add1aa491caf0cbe2dd878fc4fab0468cd4.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CognitoResourcesCognitoDefaultAuthenticatedRole7117DBC9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "CognitoResourcescognitoIdentityPool49D2E355",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CognitoResourcesCognitoDefaultAuthenticatedRoleDefaultPolicy48A48D6C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CognitoResourcesCognitoDefaultAuthenticatedRoleDefaultPolicy48A48D6C",
        "Roles": Array [
          Object {
            "Ref": "CognitoResourcesCognitoDefaultAuthenticatedRole7117DBC9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CognitoResourcesCognitoDefaultUnauthenticatedRoleDefaultPolicy62F06898": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CognitoResourcesCognitoDefaultUnauthenticatedRoleDefaultPolicy62F06898",
        "Roles": Array [
          Object {
            "Ref": "CognitoResourcesCognitoDefaultUnauthenticatedRoleFE8D85B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CognitoResourcesCognitoDefaultUnauthenticatedRoleFE8D85B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "CognitoResourcescognitoIdentityPool49D2E355",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CognitoResourcesDefaultValidE9AE93AE": Object {
      "Properties": Object {
        "IdentityPoolId": Object {
          "Ref": "CognitoResourcescognitoIdentityPool49D2E355",
        },
        "Roles": Object {
          "authenticated": Object {
            "Fn::GetAtt": Array [
              "CognitoResourcesCognitoDefaultAuthenticatedRole7117DBC9",
              "Arn",
            ],
          },
          "unauthenticated": Object {
            "Fn::GetAtt": Array [
              "CognitoResourcesCognitoDefaultUnauthenticatedRoleFE8D85B7",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "CognitoResourcesUserPool2372872A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_email",
              "Priority": 1,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": false,
          "InviteMessageTemplate": Object {
            "EmailMessage": "Your Amazon Chime SDK SIP Trunking Demo username is {username} and temporary password is {####}",
            "EmailSubject": "Your Amazon Chime SDK SIP Trunking Demo temporary password",
          },
        },
        "AutoVerifiedAttributes": Array [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new Amazon Chime SDK SIP Trunking Demo account is {####}",
        "EmailVerificationSubject": "Verify your new Amazon Chime SDK SIP Trunking Demo account",
        "EnabledMfas": Array [
          "SMS_MFA",
          "SOFTWARE_TOKEN_MFA",
        ],
        "LambdaConfig": Object {
          "PreSignUp": Object {
            "Fn::GetAtt": Array [
              "CognitoResourcesdomainValidator746FEE08",
              "Arn",
            ],
          },
        },
        "MfaConfiguration": "OPTIONAL",
        "Schema": Array [
          Object {
            "Mutable": true,
            "Name": "email",
            "Required": true,
          },
        ],
        "SmsConfiguration": Object {
          "ExternalId": "testCognitoResourcesUserPoolEDF3B30F",
          "SnsCallerArn": Object {
            "Fn::GetAtt": Array [
              "CognitoResourcesUserPoolsmsRole4256165D",
              "Arn",
            ],
          },
        },
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserAttributeUpdateSettings": Object {
          "AttributesRequireVerificationBeforeUpdate": Array [
            "email",
          ],
        },
        "UserPoolName": "test-UserPool",
        "UsernameAttributes": Array [
          "email",
        ],
        "UsernameConfiguration": Object {
          "CaseSensitive": false,
        },
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new Amazon Chime SDK SIP Trunking Demo account is {####}",
          "EmailSubject": "Verify your new Amazon Chime SDK SIP Trunking Demo account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "CognitoResourcesUserPoolClientC637B6EF": Object {
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "ClientName": "test-UserPool",
        "ExplicitAuthFlows": Array [
          "ALLOW_CUSTOM_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "RefreshTokenValidity": 60,
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "TokenValidityUnits": Object {
          "RefreshToken": "minutes",
        },
        "UserPoolId": Object {
          "Ref": "CognitoResourcesUserPool2372872A",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "CognitoResourcesUserPoolPreSignUpCognito7CB113C8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CognitoResourcesdomainValidator746FEE08",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "CognitoResourcesUserPool2372872A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "CognitoResourcesUserPoolsmsRole4256165D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "StringEquals": Object {
                  "sts:ExternalId": "testCognitoResourcesUserPoolEDF3B30F",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cognito-idp.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "sns:Publish",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "sns-publish",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CognitoResourcescognitoIdentityPool49D2E355": Object {
      "Properties": Object {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": Array [
          Object {
            "ClientId": Object {
              "Ref": "CognitoResourcesUserPoolClientC637B6EF",
            },
            "ProviderName": Object {
              "Fn::GetAtt": Array [
                "CognitoResourcesUserPool2372872A",
                "ProviderName",
              ],
            },
          },
        ],
        "IdentityPoolName": "test-IdentityPool",
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "CognitoResourcesdomainValidator746FEE08": Object {
      "DependsOn": Array [
        "CognitoResourcesdomainValidatorServiceRole45928470",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "b1b7c3003b2b18e5fd9377f57c69c1ac5640b67f97bca6d2e02b2434246d2b1d.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_DOMAIN": " ",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "CognitoResourcesdomainValidatorServiceRole45928470",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CognitoResourcesdomainValidatorServiceRole45928470": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB6723FB92": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleDefaultPolicy96C3E726",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleBA21DBC1",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "2d56e153cac88d3e0c2f842e8e6f6783b8725bf91f95e0673b4725448a56e96d.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "ServerassetBucketDeploymentAwsCliLayer51A9B05F",
          },
        ],
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleBA21DBC1",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleBA21DBC1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleDefaultPolicy96C3E726": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerassetBucketD78D47DA",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ServerassetBucketD78D47DA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleDefaultPolicy96C3E726",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiBServiceRoleBA21DBC1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D": Object {
      "DependsOn": Array [
        "CustomPSTNResourcesCustomResourceProviderRole536C0E76",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "e6b1f0c4b6434044efa7f51dad6ea08b6943a11881da330cee76e4a174e0dc5f.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomPSTNResourcesCustomResourceProviderRole536C0E76",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomPSTNResourcesCustomResourceProviderRole536C0E76": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "chime:CreatePhoneNumberOrder",
                    "chime:CreateSipMediaApplication",
                    "chime:CreateSipRule",
                    "chime:CreateVoiceConnector",
                    "chime:CreateVoiceProfileDomain",
                    "chime:DeletePhoneNumber",
                    "chime:DeleteSipMediaApplication",
                    "chime:DeleteSipRule",
                    "chime:DeleteVoiceConnector",
                    "chime:DeleteVoiceProfileDomain",
                    "chime:GetPhoneNumber",
                    "chime:GetPhoneNumberOrder",
                    "chime:GetSipRule",
                    "chime:ListPhoneNumbers",
                    "chime:PutSipMediaApplicationLoggingConfiguration",
                    "chime:PutVoiceConnectorLoggingConfiguration",
                    "chime:PutVoiceConnectorOrigination",
                    "chime:PutVoiceConnectorStreamingConfiguration",
                    "chime:PutVoiceConnectorTermination",
                    "chime:*MediaInsightsPipelineConfiguration",
                    "chime:SearchAvailablePhoneNumbers",
                    "chime:UpdateSipRule",
                    "chime:AssociatePhoneNumbersWithVoiceConnector",
                    "chime:DisassociatePhoneNumbersFromVoiceConnector",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:DescribeLogGroups",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:ListLogDeliveries",
                    "logs:CreateLogDelivery",
                    "logs:GetLogDelivery",
                    "logs:DeleteLogDelivery",
                    "logs:PutResourcePolicy",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "iam:CreateServiceLinkedRole",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "lambda:GetPolicy",
                    "lambda:AddPermission",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": "ssm:*Parameter*",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:ssm:us-east-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":parameter/chime/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "LexlexAudioBucket4C097646",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabasedepartmentDirectory13287858": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "department_name",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "department_name",
            "KeyType": "HASH",
          },
        ],
        "TimeToLiveSpecification": Object {
          "AttributeName": "TTL",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseinitTable29D32BF5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DatabaseinitTableCustomResourcePolicy07832289",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"DynamoDB\\",\\"action\\":\\"batchWriteItem\\",\\"parameters\\":{\\"RequestItems\\":{\\"",
              Object {
                "Ref": "DatabasedepartmentDirectory13287858",
              },
              "\\":[{\\"PutRequest\\":{\\"Item\\":{\\"department_name\\":{\\"S\\":\\"science\\"},\\"service\\":{\\"S\\":\\"voiceConnector\\"},\\"number\\":{\\"S\\":\\"600100\\"}}}},{\\"PutRequest\\":{\\"Item\\":{\\"department_name\\":{\\"S\\":\\"art\\"},\\"service\\":{\\"S\\":\\"voiceConnector\\"},\\"number\\":{\\"S\\":\\"600200\\"}}}},{\\"PutRequest\\":{\\"Item\\":{\\"department_name\\":{\\"S\\":\\"history\\"},\\"service\\":{\\"S\\":\\"voiceConnector\\"},\\"number\\":{\\"S\\":\\"600300\\"}}}},{\\"PutRequest\\":{\\"Item\\":{\\"department_name\\":{\\"S\\":\\"math\\"},\\"service\\":{\\"S\\":\\"voiceConnector\\"},\\"number\\":{\\"S\\":\\"600400\\"}}}}]}},\\"physicalResourceId\\":{\\"id\\":\\"",
              Object {
                "Ref": "DatabasedepartmentDirectory13287858",
              },
              "_initialization\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": false,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseinitTableCustomResourcePolicy07832289": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:BatchWriteItem",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatabaseinitTableCustomResourcePolicy07832289",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DistributionResourcesDistribution80C53434": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "OriginRequestPolicyId": Object {
                "Ref": "DistributionResourcesremoveCookiesPolicyC3AC0485",
              },
              "PathPattern": "/ws",
              "TargetOriginId": "testDistributionResourcesDistributionOrigin255B4D0DE",
              "ViewerProtocolPolicy": "https-only",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
            "TargetOriginId": "testDistributionResourcesDistributionOrigin1AB07B588",
            "ViewerProtocolPolicy": "https-only",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "HTTPPort": 80,
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "VPCResourcesApplicationLoadBalancer8B897D2E",
                  "DNSName",
                ],
              },
              "Id": "testDistributionResourcesDistributionOrigin1AB07B588",
            },
            Object {
              "CustomOriginConfig": Object {
                "HTTPPort": 8088,
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "VPCResourcesApplicationLoadBalancer8B897D2E",
                  "DNSName",
                ],
              },
              "Id": "testDistributionResourcesDistributionOrigin255B4D0DE",
            },
          ],
          "PriceClass": "PriceClass_100",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "DistributionResourcesremoveCookiesPolicyC3AC0485": Object {
      "Properties": Object {
        "OriginRequestPolicyConfig": Object {
          "CookiesConfig": Object {
            "CookieBehavior": "none",
          },
          "HeadersConfig": Object {
            "HeaderBehavior": "allExcept",
            "Headers": Array [
              "Cookie",
            ],
          },
          "Name": "RemoveCookies-test",
          "QueryStringsConfig": Object {
            "QueryStringBehavior": "none",
          },
        },
      },
      "Type": "AWS::CloudFront::OriginRequestPolicy",
    },
    "LambdaResourcessmaHandlerLambda4E25D822": Object {
      "DependsOn": Array [
        "LambdaResourcessmaHandlerRoleDefaultPolicyCE20D082",
        "LambdaResourcessmaHandlerRole317CFB26",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "da36a0c941edaf84f7da07ab95adf5f11b57d65eb1b4820409b7d5c1e819d86f.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ACCOUNT_ID": Object {
              "Ref": "AWS::AccountId",
            },
            "DEPARTMENT_DIRECTORY": Object {
              "Ref": "DatabasedepartmentDirectory13287858",
            },
            "LEX_BOT_ALIAS_ID": Object {
              "Fn::GetAtt": Array [
                "LexchimeLexBotAlias275DAEDB",
                "BotAliasId",
              ],
            },
            "LEX_BOT_ID": Object {
              "Fn::GetAtt": Array [
                "LexchimeLexBot2A96F463",
                "Id",
              ],
            },
            "REGION": "us-east-1",
            "VOICE_CONNECTOR_ARN": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:aws:chime:us-east-1:",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":vc/",
                  Object {
                    "Fn::GetAtt": Array [
                      "VoiceConnectorsmaVoiceConnectorvoiceConnectorRequestpstnCustomResourceAFA26FDA",
                      "voiceConnectorId",
                    ],
                  },
                ],
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaResourcessmaHandlerRole317CFB26",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaResourcessmaHandlerRole317CFB26": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "chime:*",
                    "lex:putSession",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "chimePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaResourcessmaHandlerRoleDefaultPolicyCE20D082": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DatabasedepartmentDirectory13287858",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaResourcessmaHandlerRoleDefaultPolicyCE20D082",
        "Roles": Array [
          Object {
            "Ref": "LambdaResourcessmaHandlerRole317CFB26",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LexLexResourcePolicy80A19810": Object {
      "Properties": Object {
        "Policy": Object {
          "Statement": Array [
            Object {
              "Action": "lex:StartConversation",
              "Condition": Object {
                "ArnEquals": Object {
                  "AWS:SourceArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:aws:voiceconnector:us-east-1:",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
                "StringEquals": Object {
                  "AWS:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "voiceconnector.chime.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:lex:us-east-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":bot-alias/",
                    Object {
                      "Fn::GetAtt": Array [
                        "LexchimeLexBot2A96F463",
                        "Id",
                      ],
                    },
                    "/",
                    Object {
                      "Fn::GetAtt": Array [
                        "LexchimeLexBotAlias275DAEDB",
                        "BotAliasId",
                      ],
                    },
                  ],
                ],
              },
              "Sid": "AllowChimePstnAudioUseBot",
            },
          ],
          "Version": "2012-10-17",
        },
        "ResourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:lex:us-east-1:",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":bot-alias/",
              Object {
                "Fn::GetAtt": Array [
                  "LexchimeLexBot2A96F463",
                  "Id",
                ],
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "LexchimeLexBotAlias275DAEDB",
                  "BotAliasId",
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lex::ResourcePolicy",
    },
    "LexchimeLexBot2A96F463": Object {
      "Properties": Object {
        "AutoBuildBotLocales": true,
        "BotLocales": Array [
          Object {
            "Description": "English_US",
            "Intents": Array [
              Object {
                "Description": "Simple Call Routing",
                "DialogCodeHook": Object {
                  "Enabled": true,
                },
                "FulfillmentCodeHook": Object {
                  "Enabled": true,
                },
                "Name": "RouteCall",
                "OutputContexts": Array [
                  Object {
                    "Name": "departmentToCall",
                    "TimeToLiveInSeconds": 90,
                    "TurnsToLive": 5,
                  },
                ],
                "SampleUtterances": Array [
                  Object {
                    "Utterance": "Call {Department} department",
                  },
                  Object {
                    "Utterance": "{Department} department",
                  },
                  Object {
                    "Utterance": "Dial {Department} department",
                  },
                  Object {
                    "Utterance": "Talk to {Department} department",
                  },
                  Object {
                    "Utterance": "I need {Department} department",
                  },
                  Object {
                    "Utterance": "It's {Department} department",
                  },
                  Object {
                    "Utterance": "I want {Department} department",
                  },
                  Object {
                    "Utterance": "Call {Department}",
                  },
                  Object {
                    "Utterance": "{Department}",
                  },
                  Object {
                    "Utterance": "Dial {Department}",
                  },
                  Object {
                    "Utterance": "Talk to {Department}",
                  },
                  Object {
                    "Utterance": "I need {Department}",
                  },
                  Object {
                    "Utterance": "It's {Department}",
                  },
                  Object {
                    "Utterance": "I want {Department}",
                  },
                  Object {
                    "Utterance": "Call {Department} office",
                  },
                  Object {
                    "Utterance": "{Department} office",
                  },
                  Object {
                    "Utterance": "Dial {Department} office",
                  },
                  Object {
                    "Utterance": "Talk to {Department} office",
                  },
                  Object {
                    "Utterance": "I need {Department} office",
                  },
                  Object {
                    "Utterance": "It's {Department} office",
                  },
                  Object {
                    "Utterance": "I want {Department} office",
                  },
                ],
                "SlotPriorities": Array [
                  Object {
                    "Priority": 1,
                    "SlotName": "Department",
                  },
                ],
                "Slots": Array [
                  Object {
                    "Name": "Department",
                    "SlotTypeName": "Departments",
                    "ValueElicitationSetting": Object {
                      "PromptSpecification": Object {
                        "MaxRetries": 2,
                        "MessageGroupsList": Array [
                          Object {
                            "Message": Object {
                              "PlainTextMessage": Object {
                                "Value": "What department do you want?",
                              },
                            },
                          },
                        ],
                        "PromptAttemptsSpecification": Object {
                          "Initial": Object {
                            "AllowInterrupt": true,
                            "AllowedInputTypes": Object {
                              "AllowAudioInput": true,
                              "AllowDTMFInput": false,
                            },
                            "AudioAndDTMFInputSpecification": Object {
                              "AudioSpecification": Object {
                                "EndTimeoutMs": 1000,
                                "MaxLengthMs": 10000,
                              },
                              "StartTimeoutMs": 1000,
                            },
                          },
                        },
                      },
                      "SlotConstraint": "Required",
                    },
                  },
                ],
              },
              Object {
                "DialogCodeHook": Object {
                  "Enabled": true,
                },
                "IntentClosingSetting": Object {
                  "ClosingResponse": Object {
                    "MessageGroupsList": Array [
                      Object {
                        "Message": Object {
                          "PlainTextMessage": Object {
                            "Value": "Sorry I am having trouble understanding. Can you say the person's name again?",
                          },
                        },
                      },
                    ],
                  },
                },
                "Name": "FallbackIntent",
                "ParentIntentSignature": "AMAZON.FallbackIntent",
              },
            ],
            "LocaleId": "en_US",
            "NluConfidenceThreshold": 0.4,
            "SlotTypes": Array [
              Object {
                "Description": "Possible Departments",
                "Name": "Departments",
                "SlotTypeValues": Array [
                  Object {
                    "SampleValue": Object {
                      "Value": "art",
                    },
                  },
                  Object {
                    "SampleValue": Object {
                      "Value": "history",
                    },
                  },
                  Object {
                    "SampleValue": Object {
                      "Value": "math",
                    },
                  },
                  Object {
                    "SampleValue": Object {
                      "Value": "science",
                    },
                  },
                ],
                "ValueSelectionSetting": Object {
                  "ResolutionStrategy": "ORIGINAL_VALUE",
                },
              },
            ],
            "VoiceSettings": Object {
              "Engine": "neural",
              "VoiceId": "Joanna",
            },
          },
        ],
        "DataPrivacy": Object {
          "ChildDirected": false,
        },
        "IdleSessionTTLInSeconds": 300,
        "Name": "CallRoutingDemo",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "LexlexRoleB28F9876",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lex::Bot",
    },
    "LexchimeLexBotAlias275DAEDB": Object {
      "Properties": Object {
        "BotAliasLocaleSettings": Array [
          Object {
            "BotAliasLocaleSetting": Object {
              "CodeHookSpecification": Object {
                "LambdaCodeHook": Object {
                  "CodeHookInterfaceVersion": "1.0",
                  "LambdaArn": Object {
                    "Fn::GetAtt": Array [
                      "LexlexCodeHookD5AC5A70",
                      "Arn",
                    ],
                  },
                },
              },
              "Enabled": true,
            },
            "LocaleId": "en_US",
          },
        ],
        "BotAliasName": "DialDepartmentBot",
        "BotId": Object {
          "Ref": "LexchimeLexBot2A96F463",
        },
        "BotVersion": Object {
          "Fn::GetAtt": Array [
            "LexchimeLexBotVersion78FD7F20",
            "BotVersion",
          ],
        },
        "ConversationLogSettings": Object {
          "AudioLogSettings": Array [
            Object {
              "Destination": Object {
                "S3Bucket": Object {
                  "LogPrefix": "chimeLexBot",
                  "S3BucketArn": Object {
                    "Fn::GetAtt": Array [
                      "LexlexAudioBucket4C097646",
                      "Arn",
                    ],
                  },
                },
              },
              "Enabled": true,
            },
          ],
          "TextLogSettings": Array [
            Object {
              "Destination": Object {
                "CloudWatch": Object {
                  "CloudWatchLogGroupArn": Object {
                    "Fn::GetAtt": Array [
                      "LexlexLogGroupDBC25B45",
                      "Arn",
                    ],
                  },
                  "LogPrefix": "chimeLexBot",
                },
              },
              "Enabled": true,
            },
          ],
        },
        "SentimentAnalysisSettings": Object {
          "DetectSentiment": false,
        },
      },
      "Type": "AWS::Lex::BotAlias",
    },
    "LexchimeLexBotVersion78FD7F20": Object {
      "Properties": Object {
        "BotId": Object {
          "Ref": "LexchimeLexBot2A96F463",
        },
        "BotVersionLocaleSpecification": Array [
          Object {
            "BotVersionLocaleDetails": Object {
              "SourceBotVersion": "DRAFT",
            },
            "LocaleId": "en_US",
          },
        ],
      },
      "Type": "AWS::Lex::BotVersion",
    },
    "LexlexAudioBucket4C097646": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "LexlexAudioBucketAutoDeleteObjectsCustomResource35D7545E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "LexlexAudioBucketPolicy275C5409",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "LexlexAudioBucket4C097646",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "LexlexAudioBucketPolicy275C5409": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "LexlexAudioBucket4C097646",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "LexlexAudioBucket4C097646",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "LexlexAudioBucket4C097646",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "LexlexCodeHookD5AC5A70": Object {
      "DependsOn": Array [
        "LexlexCodeHookServiceRoleDefaultPolicyDD03C4E7",
        "LexlexCodeHookServiceRoleA9E280CA",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "e8459267d774bdcb0b3dd7652d76029b10545d1c3b1a03fc0f06615b20aeaf49.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "DEPARTMENT_TABLE": Object {
              "Ref": "DatabasedepartmentDirectory13287858",
            },
          },
        },
        "Handler": "index.lambda_handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LexlexCodeHookServiceRoleA9E280CA",
            "Arn",
          ],
        },
        "Runtime": "python3.10",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LexlexCodeHookLexInvocation7060DEFC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "LexlexCodeHookD5AC5A70",
            "Arn",
          ],
        },
        "Principal": "lexv2.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:aws:lex:us-east-1:",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":bot-alias/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LexlexCodeHookServiceRoleA9E280CA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LexlexCodeHookServiceRoleDefaultPolicyDD03C4E7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DatabasedepartmentDirectory13287858",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LexlexCodeHookServiceRoleDefaultPolicyDD03C4E7",
        "Roles": Array [
          Object {
            "Ref": "LexlexCodeHookServiceRoleA9E280CA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LexlexLogGroupDBC25B45": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "LexlexRoleB28F9876": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lex.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "polly:SynthesizeSpeech",
                  "Effect": "Allow",
                  "Resource": "*",
                },
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "LexlexLogGroupDBC25B45",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "lexPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LexlexRoleDefaultPolicy667E533C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "LexlexAudioBucket4C097646",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "LexlexAudioBucket4C097646",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LexlexRoleDefaultPolicy667E533C",
        "Roles": Array [
          Object {
            "Ref": "LexlexRoleB28F9876",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PSTNAudiopstnPhoneNumberChimePhoneNumberpstnCustomResource40D6B3FE": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": Object {
          "phoneCountry": "US",
          "phoneNumberType": "Local",
          "phoneProductType": "SipMediaApplicationDialIn",
          "phoneState": "IL",
        },
        "resourceType": "PhoneNumber",
        "uid": "testPSTNAudiopstnPhoneNumber66D4D370",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "PSTNAudiosipMediaAppsipMediaAppRequestpstnCustomResourceB0C1B5E6": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": Object {
          "endpoint": Object {
            "Fn::GetAtt": Array [
              "LambdaResourcessmaHandlerLambda4E25D822",
              "Arn",
            ],
          },
          "name": "testPSTNAudiosipMediaAppA11E0D02",
          "region": "us-east-1",
        },
        "resourceType": "SMA",
        "uid": "testPSTNAudiosipMediaAppA11E0D02",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "PSTNAudiosipRulesipRuleRequestpstnCustomResourceC71F1380": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": Object {
          "name": "testPSTNAudiosipRule9D11945A",
          "targetApplications": Array [
            Object {
              "priority": 1,
              "region": "us-east-1",
              "sipMediaApplicationId": Object {
                "Fn::GetAtt": Array [
                  "PSTNAudiosipMediaAppsipMediaAppRequestpstnCustomResourceB0C1B5E6",
                  "sipMediaAppId",
                ],
              },
            },
          ],
          "triggerType": "ToPhoneNumber",
          "triggerValue": Object {
            "Fn::GetAtt": Array [
              "PSTNAudiopstnPhoneNumberChimePhoneNumberpstnCustomResource40D6B3FE",
              "phoneNumber",
            ],
          },
        },
        "resourceType": "SMARule",
        "uid": "testPSTNAudiosipRule9D11945A",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
    "ServerEIPAssociationA690C099": Object {
      "Properties": Object {
        "EIP": Object {
          "Ref": "VPCResourcesasteriskEipC341F971",
        },
        "InstanceId": Object {
          "Ref": "ServerInstanceE518391B1677bfd2f1972570",
        },
      },
      "Type": "AWS::EC2::EIPAssociation",
    },
    "ServerInstanceE518391B1677bfd2f1972570": Object {
      "CreationPolicy": Object {
        "ResourceSignal": Object {
          "Count": 1,
          "Timeout": "PT10M",
        },
      },
      "DependsOn": Array [
        "ServerserverEc2RoleDefaultPolicy2995B49A",
        "ServerserverEc2RoleAA905608",
      ],
      "Metadata": Object {
        "AWS::CloudFormation::Init": Object {
          "cli": Object {
            "commands": Object {
              "000": Object {
                "command": "curl \\"https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip\\" -o \\"awscliv2.zip\\"",
              },
              "001": Object {
                "command": "unzip -q awscliv2.zip",
              },
              "002": Object {
                "command": "./aws/install",
              },
              "003": Object {
                "command": "echo AWS CLI installed",
              },
            },
          },
          "config": Object {
            "commands": Object {
              "000": Object {
                "command": "corepack enable",
              },
              "001": Object {
                "command": "chmod +x /etc/config_asterisk.sh",
              },
              "002": Object {
                "command": "/etc/config_asterisk.sh",
              },
            },
            "files": Object {
              "/etc/asterisk/asterisk.conf": Object {
                "content": "[options]
runuser = asterisk
rungroup = asterisk",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/extensions.conf": Object {
                "content": "[general]
static=yes
writeprotect=no
clearglobalvars=no

[handler]
exten => addheader,1,NoOP(Add \${ARG1} to SIP as X-LexInfo)
same => n,Set(PJSIP_HEADER(add,X-LexInfo)=\${ARG1})

[contact-center]
exten => _X.,1,NoOP(Inbound Contact Center)
same => n,Answer()
same => n,Wait(1)

same => n,Verbose(Get device status \${DEVICE_STATE(PJSIP/PHONE_NUMBER)})
same => n,Set(LEX_INFO=\${PJSIP_HEADER(read,X-LexInfo)})
same => n,GotoIf($[\${DEVICE_STATE(PJSIP/PHONE_NUMBER)}=UNAVAILABLE]?playAudio:callAgent)

same => n(callAgent),NoOp(CallAgent)
same => n,Dial(PJSIP/PHONE_NUMBER,,b(handler^addheader^1(\${LEX_INFO})))
same => n,Hangup()

same => n(playAudio),NoOp(PlayAudio)
same => n,Playback(/var/lib/asterisk/sounds/en/\${LEX_INFO})
same => n,Hangup()


[from-sma]
include => contact-center",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/http.conf": Object {
                "content": "[general]
enabled=yes
bindaddr=0.0.0.0
bindport=8088
",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/logger.conf": Object {
                "content": "[general]
[logfiles]
console = verbose,notice,warning,error
messages = notice,warning,error",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/modules.conf": Object {
                "content": "[modules]
autoload = no

load = app_bridgewait.so
load = app_dial.so
load = app_playback.so
load = app_stack.so
load = app_verbose.so
load = app_voicemail.so
load = app_directory.so
load = app_confbridge.so
load = app_queue.so
load = app_echo.so
load = app_while.so
load = app_read.so

; Bridging

load = bridge_builtin_features.so
load = bridge_builtin_interval_features.so
load = bridge_holding.so
load = bridge_native_rtp.so
load = bridge_simple.so
load = bridge_softmix.so

; Call Detail Records

load = cdr_custom.so

; Channel Drivers

load = chan_bridge_media.so
load = chan_pjsip.so

; Codecs

load = codec_gsm.so
load = codec_resample.so
load = codec_ulaw.so
load = codec_g722.so

; Formats

load = format_gsm.so
load = format_pcm.so
load = format_wav_gsm.so
load = format_wav.so

; Functions

load = func_callerid.so
load = func_cdr.so
load = func_pjsip_endpoint.so
load = func_sorcery.so
load = func_devstate.so
load = func_strings.so
load = func_cut.so
load = func_rand.so
load = func_shell.so
load = func_env.so

; Core/PBX

load = pbx_config.so

; Resources

load = res_http_websocket.so
load = res_crypto.so
load = res_musiconhold.so
load = res_pjproject.so
load = res_pjsip_acl.so
load = res_pjsip_authenticator_digest.so
load = res_pjsip_caller_id.so
load = res_pjsip_dialog_info_body_generator.so
load = res_pjsip_diversion.so
load = res_pjsip_dtmf_info.so
load = res_pjsip_endpoint_identifier_anonymous.so
load = res_pjsip_endpoint_identifier_ip.so
load = res_pjsip_endpoint_identifier_user.so
load = res_pjsip_exten_state.so
load = res_pjsip_header_funcs.so
load = res_pjsip_logger.so
load = res_pjsip_messaging.so
load = res_pjsip_mwi_body_generator.so
load = res_pjsip_mwi.so
load = res_pjsip_nat.so
load = res_pjsip_notify.so
load = res_pjsip_one_touch_record_info.so
load = res_pjsip_outbound_authenticator_digest.so
load = res_pjsip_outbound_publish.so
load = res_pjsip_outbound_registration.so
load = res_pjsip_path.so
load = res_pjsip_pidf_body_generator.so
load = res_pjsip_pidf_digium_body_supplement.so
load = res_pjsip_pidf_eyebeam_body_supplement.so
load = res_pjsip_publish_asterisk.so
load = res_pjsip_pubsub.so
load = res_pjsip_refer.so
load = res_pjsip_registrar.so
load = res_pjsip_rfc3326.so
load = res_pjsip_sdp_rtp.so
load = res_pjsip_send_to_voicemail.so
load = res_pjsip_session.so
load = res_pjsip.so
load = res_pjsip_t38.so
load = res_pjsip_transport_websocket.so
load = res_pjsip_xpidf_body_generator.so
load = res_rtp_asterisk.so
load = res_sorcery_astdb.so
load = res_sorcery_config.so
load = res_sorcery_memory.so
load = res_sorcery_realtime.so
load = res_timing_timerfd.so
load = res_pjsip_transport_websocket.so
load = res_http_websocket.so
load = res_srtp.so

; Do not load res_hep and kin unless you are using HEP monitoring
; <http://sipcapture.org> in your network.

noload = res_hep.so
noload = res_hep_pjsip.so
noload = res_hep_rtcp.so",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/pjsip.conf": Object {
                "content": "[udp]
type=transport
protocol=udp
bind=0.0.0.0
external_media_address=PUBLIC_IP
external_signaling_address=PUBLIC_IP
allow_reload=yes

[ws]
type=transport
protocol=ws
bind=0.0.0.0
external_media_address=PUBLIC_IP
external_signaling_address=PUBLIC_IP
allow_reload=yes

[SMAVoiceConnector]
type=endpoint
context=from-sma
transport=udp
disallow=all
allow=ulaw
aors=SMAVoiceConnector
direct_media=no
ice_support=yes
force_rport=yes

[SMAVoiceConnector]
type=identify
endpoint=SMAVoiceConnector
match=VOICE_CONNECTOR.voiceconnector.chime.aws

[SMAVoiceConnector]
type=aor
contact=sip:VOICE_CONNECTOR.voiceconnector.chime.aws

[PHONE_NUMBER]
type=endpoint
aors=PHONE_NUMBER
auth=PHONE_NUMBER
webrtc=yes
context=from-phone
disallow=all
allow=ulaw

[PHONE_NUMBER]
type=auth
auth_type=userpass
username=PHONE_NUMBER
password=STACK_ID

[PHONE_NUMBER]
type=aor
max_contacts=5

",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/asterisk/rtp.conf": Object {
                "content": "[general]

stunaddr=stun.kinesisvideo.us-east-1.amazonaws.com:443",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/config.json": Object {
                "content": Object {
                  "IP": Object {
                    "Ref": "VPCResourcesasteriskEipC341F971",
                  },
                  "PHONE_NUMBER": Object {
                    "Fn::GetAtt": Array [
                      "PSTNAudiopstnPhoneNumberChimePhoneNumberpstnCustomResource40D6B3FE",
                      "phoneNumber",
                    ],
                  },
                  "REGION": "us-east-1",
                  "STACK_ID": "test",
                  "VOICE_CONNECTOR": Object {
                    "Fn::GetAtt": Array [
                      "VoiceConnectorsmaVoiceConnectorvoiceConnectorRequestpstnCustomResourceAFA26FDA",
                      "voiceConnectorId",
                    ],
                  },
                },
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/config_asterisk.sh": Object {
                "content": "#!/bin/bash -xe

PUBLIC_IP=$( jq -r '.IP' /etc/config.json )
VOICE_CONNECTOR=$( jq -r '.VOICE_CONNECTOR' /etc/config.json )
PHONE_NUMBER=$( jq -r '.PHONE_NUMBER' /etc/config.json )
STACK_ID=$( jq -r '.STACK_ID' /etc/config.json )

/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/amazon-cloudwatch-agent.json

sed -i \\"s/PUBLIC_IP/$PUBLIC_IP/g\\" /etc/asterisk/pjsip.conf
sed -i \\"s/VOICE_CONNECTOR/\${VOICE_CONNECTOR}/g\\" /etc/asterisk/pjsip.conf
sed -i \\"s/PHONE_NUMBER/$PHONE_NUMBER/g\\" /etc/asterisk/extensions.conf
sed -i \\"s/PHONE_NUMBER/$PHONE_NUMBER/g\\" /etc/asterisk/pjsip.conf
sed -i \\"s/STACK_ID/$STACK_ID/g\\" /etc/asterisk/pjsip.conf 

echo \\"VOICE_CONNECTOR: \${VOICE_CONNECTOR}\\"
echo \\"STACK_ID: \${STACK_ID}\\"
echo \\"PHONE_NUMBER: \${PHONE_NUMBER}\\"

cd /etc/polly/
pip3 install boto3

python3 /etc/polly/createWav.py -file science -text 'Thank you for calling science department. Goodbye.'
python3 /etc/polly/createWav.py -file art -text 'Thank you for calling art department. Goodbye.'
python3 /etc/polly/createWav.py -file history -text 'Thank you for calling history department. Goodbye.'
python3 /etc/polly/createWav.py -file math -text 'Thank you for calling math department. Goodbye.'
python3 /etc/polly/createWav.py -file unknown -text \\"Thank you for calling.  Sorry I couldn't find a department\\"

usermod -aG audio,dialout asterisk
chown -R asterisk.asterisk /etc/asterisk
chown -R asterisk.asterisk /var/{lib,log,spool}/asterisk

echo '0 * * * * /sbin/asterisk -rx \\"core reload\\"' > /etc/asterisk/crontab.txt 
crontab /etc/asterisk/crontab.txt

systemctl restart asterisk
/sbin/asterisk -rx \\"core reload\\"

cd /home/ubuntu/site
yarn && yarn run build
chown ubuntu:ubuntu . -R
chown ubuntu:ubuntu /var/www/html/. -R
systemctl enable nginx
systemctl restart nginx",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/nginx/sites-available/default": Object {
                "content": "server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.html;

    server_name _;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /healthcheck {
        access_log off;
        return 200;
    }

    location ~* \\\\.(?:ico|css|js|gif|jpe?g|png)$ {
        expires max;
        add_header Cache-Control \\"public, must-revalidate, proxy-revalidate\\";
        try_files $uri =404;
    }
}",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/etc/polly/createWav.py": Object {
                "content": "import boto3
import os
import wave
import argparse
import sys
from botocore.config import Config

config = Config(
    region_name='us-east-1')

polly = boto3.client('polly', config=config)


def createPolly(pollyText, fileName):
    response = polly.synthesize_speech(
        OutputFormat='pcm',
        Text=pollyText,
        SampleRate='8000',
        VoiceId='Joanna'
    )

    if 'AudioStream' in response:
        outputWav = '/var/lib/asterisk/sounds/en/' + fileName + '.wav'
        with wave.open(outputWav, 'wb') as wav_file:
            wav_file.setparams((1, 2, 8000, 0, 'NONE', 'NONE'))
            wav_file.writeframes(response['AudioStream'].read())

    return outputWav


parse_msg = 'Simple utility to create wav files for SMA via Polly'
parser = argparse.ArgumentParser(prog='createWav.py', description=parse_msg)
parser.add_argument('-file', help='Name of file to be created (without .wav)')
parser.add_argument('-text', help='Text of the audio to be created in quotes')
args = parser.parse_args()

fileName = args.file
pollyText = args.text

if not fileName:
    print('Filename is rquired')
    sys.exit()

if not pollyText:
    print('Text is required')
    sys.exit()

wavFile = createPolly(pollyText, fileName)
print('wav file created: ' + wavFile)
",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/home/ubuntu/.ssh/authorized_keys": Object {
                "content": " 
",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
              "/home/ubuntu/site/.env": Object {
                "content": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "SIP_URI=sip:",
                      Object {
                        "Fn::GetAtt": Array [
                          "PSTNAudiopstnPhoneNumberChimePhoneNumberpstnCustomResource40D6B3FE",
                          "phoneNumber",
                        ],
                      },
                      "@",
                      Object {
                        "Fn::GetAtt": Array [
                          "DistributionResourcesDistribution80C53434",
                          "DomainName",
                        ],
                      },
                      "
SIP_PASSWORD=test
WEBSOCKET_URL=wss://",
                      Object {
                        "Fn::GetAtt": Array [
                          "DistributionResourcesDistribution80C53434",
                          "DomainName",
                        ],
                      },
                      "/ws
VOICE_CONNECTOR_PHONE=",
                      Object {
                        "Fn::GetAtt": Array [
                          "PSTNAudiopstnPhoneNumberChimePhoneNumberpstnCustomResource40D6B3FE",
                          "phoneNumber",
                        ],
                      },
                      "
SERVER_IP=",
                      Object {
                        "Ref": "VPCResourcesasteriskEipC341F971",
                      },
                      "
USER_POOL_REGION=us-east-1
USER_POOL_ID=",
                      Object {
                        "Ref": "CognitoResourcesUserPool2372872A",
                      },
                      "
WEB_CLIENT_ID=",
                      Object {
                        "Ref": "CognitoResourcesUserPoolClientC637B6EF",
                      },
                      "
IDENTITY_POOL=",
                      Object {
                        "Ref": "CognitoResourcescognitoIdentityPool49D2E355",
                      },
                      "
",
                    ],
                  ],
                },
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
            },
          },
          "configSets": Object {
            "default": Array [
              "preBuild",
              "packages",
              "logs",
              "cli",
              "downloads",
              "config",
            ],
          },
          "downloads": Object {
            "commands": Object {
              "000": Object {
                "command": "mkdir -p /var/lib/asterisk/sounds/en",
              },
              "001": Object {
                "command": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "aws s3 cp s3://",
                      Object {
                        "Ref": "ServerassetBucketD78D47DA",
                      },
                      "/audio/AGENT_Retail40.wav /var/lib/asterisk/sounds/en/AGENT_Retail40.wav",
                    ],
                  ],
                },
              },
              "002": Object {
                "command": "echo Audio files copied",
              },
              "003": Object {
                "command": "mkdir -p /home/ubuntu/site",
              },
              "004": Object {
                "command": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "aws s3 cp s3://",
                      Object {
                        "Ref": "ServerassetBucketD78D47DA",
                      },
                      "/site /home/ubuntu/site --recursive",
                    ],
                  ],
                },
              },
              "005": Object {
                "command": "usermod -a -G www-data ubuntu",
              },
              "006": Object {
                "command": "echo User added to www-data group",
              },
            },
          },
          "logs": Object {
            "commands": Object {
              "000": Object {
                "command": "curl \\"https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/arm64/latest/amazon-cloudwatch-agent.deb\\" -o \\"amazon-cloudwatch-agent.deb\\"",
              },
              "001": Object {
                "command": "dpkg -i -E ./amazon-cloudwatch-agent.deb",
              },
              "002": Object {
                "command": "/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/tmp/amazon-cloudwatch-agent.json",
              },
            },
            "files": Object {
              "/tmp/amazon-cloudwatch-agent.json": Object {
                "content": "{
	\\"agent\\": {
		\\"run_as_user\\": \\"root\\"
	},
	\\"logs\\": {
		\\"logs_collected\\": {
			\\"files\\": {
				\\"collect_list\\": [
					{
						\\"file_path\\": \\"/var/log/cloud-init-output.log\\",
						\\"log_group_name\\": \\"/server/amazon-chime-sdk-lex-ivr/\\",
						\\"log_stream_name\\": \\"{instance_id}-cloud-init-output\\",
						\\"retention_in_days\\": 7
					},
					{
						\\"file_path\\": \\"/var/log/asterisk/messages\\",
						\\"log_group_name\\": \\"/server/amazon-chime-sdk-lex-ivr/\\",
						\\"log_stream_name\\": \\"{instance_id}-messages\\",
						\\"retention_in_days\\": 7
					},
					{
						\\"file_path\\": \\"/var/log/cloud-init.log\\",
						\\"log_group_name\\": \\"/server/amazon-chime-sdk-lex-ivr/\\",
						\\"log_stream_name\\": \\"{instance_id}-cloud-init\\",
						\\"retention_in_days\\": 7
					}
				]
			}
		}
	}
}",
                "encoding": "plain",
                "group": "root",
                "mode": "000644",
                "owner": "root",
              },
            },
          },
          "packages": Object {
            "packages": Object {
              "apt": Object {
                "asterisk": Array [],
                "jq": Array [],
                "nginx": Array [],
                "nodejs": Array [],
                "unzip": Array [],
              },
            },
          },
          "preBuild": Object {
            "commands": Object {
              "000": Object {
                "command": "curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -",
              },
            },
          },
        },
      },
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "BlockDeviceMappings": Array [
          Object {
            "DeviceName": "/dev/sda1",
            "Ebs": Object {
              "Encrypted": true,
              "VolumeSize": 30,
            },
          },
        ],
        "IamInstanceProfile": Object {
          "Ref": "ServerInstanceInstanceProfile5CC6E324",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsservicecanonicalubuntuserverjammystablecurrentarm64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "c7g.2xlarge",
        "SecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "Serverec2InstanceSecurityGroupBD9C6329",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "VPCResourcesAsteriskSecurityGroupB50B41CA",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "VPCResourcesSSHSecurityGroupEABB5EC4",
              "GroupId",
            ],
          },
        ],
        "SubnetId": Object {
          "Ref": "VPCResourcesVPCServerPublicSubnet1SubnetBD1933BB",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Server/Instance",
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
apt-get update
while fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do sleep 1 ; done
apt-get install -y python3-pip
mkdir -p /opt/aws/bin
pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
ln -s /root/aws-cfn-bootstrap-latest/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
ln -s /usr/local/bin/cfn-* /opt/aws/bin/
# fingerprint: 3a3ef24d4edcbf85
(
  set +e
  /opt/aws/bin/cfn-init -v --region ",
                Object {
                  "Ref": "AWS::Region",
                },
                " --stack ",
                Object {
                  "Ref": "AWS::StackName",
                },
                " --resource ServerInstanceE518391B1677bfd2f1972570 --url https://cloudformation.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                " --role ",
                Object {
                  "Ref": "ServerserverEc2RoleAA905608",
                },
                " -c default
  /opt/aws/bin/cfn-signal -e $? --region ",
                Object {
                  "Ref": "AWS::Region",
                },
                " --stack ",
                Object {
                  "Ref": "AWS::StackName",
                },
                " --resource ServerInstanceE518391B1677bfd2f1972570 --url https://cloudformation.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                " --role ",
                Object {
                  "Ref": "ServerserverEc2RoleAA905608",
                },
                "
  cat /var/log/cfn-init.log >&2
)",
              ],
            ],
          },
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "ServerInstanceInstanceProfile5CC6E324": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "ServerserverEc2RoleAA905608",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "ServerassetBucketAutoDeleteObjectsCustomResource29A63753": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "ServerassetBucketPolicy47077601",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "ServerassetBucketD78D47DA",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "ServerassetBucketD78D47DA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "aws-cdk:cr-owned:dc719ac0",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "ServerassetBucketDeploymentAwsCliLayer51A9B05F": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "ServerassetBucketDeploymentCustomResource512MiB1A3EA04B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "ServerassetBucketD78D47DA",
        },
        "Prune": true,
        "RetainOnDelete": false,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C512MiB6723FB92",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
        ],
        "SourceObjectKeys": Array [
          "0970205e911ebda17670f0ec4acb54f08fe56b2caabb8766ea85cb6745d5c1fa.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "ServerassetBucketPolicy47077601": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "ServerassetBucketD78D47DA",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerassetBucketD78D47DA",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ServerassetBucketD78D47DA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "Serverec2InstanceSecurityGroupBD9C6329": Object {
      "Properties": Object {
        "GroupDescription": "test/Server/ec2InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "Serverec2InstanceSecurityGroupfromtestVPCResourcesALBSecurityGroup39AFBACF806EC17640": Object {
      "Properties": Object {
        "Description": "allow traffic on port 80 from the ALB security group",
        "FromPort": 80,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "Serverec2InstanceSecurityGroupBD9C6329",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "VPCResourcesALBSecurityGroupBA6016ED",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "Serverec2InstanceSecurityGroupfromtestVPCResourcesALBSecurityGroup39AFBACF808819733729": Object {
      "Properties": Object {
        "Description": "allow traffic on port 8088 from the ALB security group",
        "FromPort": 8088,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "Serverec2InstanceSecurityGroupBD9C6329",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "VPCResourcesALBSecurityGroupBA6016ED",
            "GroupId",
          ],
        },
        "ToPort": 8088,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "ServerhttpTargetGroup191C0E40": Object {
      "Properties": Object {
        "HealthCheckPath": "/healthcheck",
        "HealthCheckPort": "80",
        "HealthCheckProtocol": "HTTP",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "Targets": Array [
          Object {
            "Id": Object {
              "Ref": "ServerInstanceE518391B1677bfd2f1972570",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ServerserverEc2RoleAA905608": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/CloudWatchAgentServerPolicy",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "chime:*",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "chimePolicy",
          },
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "polly:SynthesizeSpeech",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "pollyPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerserverEc2RoleDefaultPolicy2995B49A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ServerassetBucketD78D47DA",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ServerassetBucketD78D47DA",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "cloudformation:DescribeStackResource",
                "cloudformation:SignalResource",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "AWS::StackId",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServerserverEc2RoleDefaultPolicy2995B49A",
        "Roles": Array [
          Object {
            "Ref": "ServerserverEc2RoleAA905608",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServerwebSocketTargetGroupDDE7CDC6": Object {
      "Properties": Object {
        "HealthCheckPath": "/httpstatus",
        "HealthCheckPort": "8088",
        "HealthCheckProtocol": "HTTP",
        "Port": 8088,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "Targets": Array [
          Object {
            "Id": Object {
              "Ref": "ServerInstanceE518391B1677bfd2f1972570",
            },
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "VPCResourcesALBSecurityGroupBA6016ED": Object {
      "Properties": Object {
        "GroupDescription": "Security Group for ALB",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 8088",
            "FromPort": 8088,
            "IpProtocol": "tcp",
            "ToPort": 8088,
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VPCResourcesApplicationLoadBalancer8B897D2E": Object {
      "DependsOn": Array [
        "VPCResourcesVPCServerPublicSubnet1DefaultRoute5FFEFA2B",
        "VPCResourcesVPCServerPublicSubnet1RouteTableAssociation739BF4B9",
        "VPCResourcesVPCServerPublicSubnet2DefaultRoute3DFFC6FB",
        "VPCResourcesVPCServerPublicSubnet2RouteTableAssociation98A1D7C3",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "VPCResourcesALBSecurityGroupBA6016ED",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "VPCResourcesVPCServerPublicSubnet1SubnetBD1933BB",
          },
          Object {
            "Ref": "VPCResourcesVPCServerPublicSubnet2Subnet87CFAE90",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "VPCResourcesApplicationLoadBalancerhttpListener5F903A35": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "ServerhttpTargetGroup191C0E40",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "VPCResourcesApplicationLoadBalancer8B897D2E",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "VPCResourcesApplicationLoadBalancerwebSocketListener75D50C71": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "ServerwebSocketTargetGroupDDE7CDC6",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "VPCResourcesApplicationLoadBalancer8B897D2E",
        },
        "Port": 8088,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "VPCResourcesAsteriskSecurityGroupB50B41CA": Object {
      "Properties": Object {
        "GroupDescription": "Security Group for Asterisk Instance",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "3.80.16.0/23",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5060,
            "IpProtocol": "udp",
            "ToPort": 5060,
          },
          Object {
            "CidrIp": "3.80.16.0/23",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5060,
            "IpProtocol": "tcp",
            "ToPort": 5061,
          },
          Object {
            "CidrIp": "99.77.253.0/24",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5060,
            "IpProtocol": "udp",
            "ToPort": 5060,
          },
          Object {
            "CidrIp": "99.77.253.0/24",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5060,
            "IpProtocol": "tcp",
            "ToPort": 5061,
          },
          Object {
            "CidrIp": "99.77.253.0/24",
            "Description": "Allow Chime Voice Connector Signaling Access",
            "FromPort": 5000,
            "IpProtocol": "udp",
            "ToPort": 65000,
          },
          Object {
            "CidrIp": "3.80.16.0/23",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 5000,
            "IpProtocol": "udp",
            "ToPort": 65000,
          },
          Object {
            "CidrIp": "52.55.62.128/25",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 1024,
            "IpProtocol": "udp",
            "ToPort": 65535,
          },
          Object {
            "CidrIp": "52.55.63.0/25",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 1024,
            "IpProtocol": "udp",
            "ToPort": 65535,
          },
          Object {
            "CidrIp": "34.212.95.128/25",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 1024,
            "IpProtocol": "udp",
            "ToPort": 65535,
          },
          Object {
            "CidrIp": "34.223.21.0/25",
            "Description": "Allow Chime Voice Connector Media Access",
            "FromPort": 1024,
            "IpProtocol": "udp",
            "ToPort": 65535,
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VPCResourcesSSHSecurityGroupEABB5EC4": Object {
      "Properties": Object {
        "GroupDescription": "Security Group for SSH",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:22",
            "FromPort": 22,
            "IpProtocol": "tcp",
            "ToPort": 22,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:3000",
            "FromPort": 3000,
            "IpProtocol": "tcp",
            "ToPort": 3000,
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "VPCResourcesVPC89517325": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPCResources/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCResourcesVPCIGW0870CE93": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPCResources/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCResourcesVPCServerPublicSubnet1DefaultRoute5FFEFA2B": Object {
      "DependsOn": Array [
        "VPCResourcesVPCVPCGW8CE4D94B",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCResourcesVPCIGW0870CE93",
        },
        "RouteTableId": Object {
          "Ref": "VPCResourcesVPCServerPublicSubnet1RouteTableF876F433",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCResourcesVPCServerPublicSubnet1RouteTableAssociation739BF4B9": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCResourcesVPCServerPublicSubnet1RouteTableF876F433",
        },
        "SubnetId": Object {
          "Ref": "VPCResourcesVPCServerPublicSubnet1SubnetBD1933BB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCResourcesVPCServerPublicSubnet1RouteTableF876F433": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPCResources/VPC/ServerPublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCResourcesVPCServerPublicSubnet1SubnetBD1933BB": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ServerPublic",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/VPCResources/VPC/ServerPublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCResourcesVPCServerPublicSubnet2DefaultRoute3DFFC6FB": Object {
      "DependsOn": Array [
        "VPCResourcesVPCVPCGW8CE4D94B",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCResourcesVPCIGW0870CE93",
        },
        "RouteTableId": Object {
          "Ref": "VPCResourcesVPCServerPublicSubnet2RouteTable4049D21F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCResourcesVPCServerPublicSubnet2RouteTable4049D21F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/VPCResources/VPC/ServerPublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCResourcesVPCServerPublicSubnet2RouteTableAssociation98A1D7C3": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCResourcesVPCServerPublicSubnet2RouteTable4049D21F",
        },
        "SubnetId": Object {
          "Ref": "VPCResourcesVPCServerPublicSubnet2Subnet87CFAE90",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCResourcesVPCServerPublicSubnet2Subnet87CFAE90": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ServerPublic",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/VPCResources/VPC/ServerPublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCResourcesVPCVPCGW8CE4D94B": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCResourcesVPCIGW0870CE93",
        },
        "VpcId": Object {
          "Ref": "VPCResourcesVPC89517325",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VPCResourcesasteriskEipC341F971": Object {
      "Type": "AWS::EC2::EIP",
    },
    "VoiceConnectorsmaVoiceConnectorvoiceConnectorRequestpstnCustomResourceAFA26FDA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomPSTNResourcesCustomResourceProviderHandlerD046A72D",
            "Arn",
          ],
        },
        "properties": Object {
          "encryption": false,
          "name": "testVoiceConnectorsmaVoiceConnector392D9D39",
          "origination": Array [
            Object {
              "host": Object {
                "Ref": "VPCResourcesasteriskEipC341F971",
              },
              "port": 5060,
              "priority": 1,
              "protocol": "UDP",
              "weight": 1,
            },
          ],
          "region": "us-east-1",
        },
        "resourceType": "VoiceConnector",
        "uid": "testVoiceConnectorsmaVoiceConnector392D9D39",
      },
      "Type": "Custom::PSTNResources",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
